apiVersion: apps/v1
kind: Deployment
metadata:
  name: chiron-autoscaler
  labels:
    app: chiron-autoscaler
  namespace: chiron
spec:
  selector:
    matchLabels:
      app: chiron-autoscaler
  template:
    metadata:
      labels:
        app: chiron-autoscaler
      namespace: chiron
    spec:
      containers:
        - name: chiron-autoscaler
          args:
            - export PYTHONPATH=/home/chiron && python /home/chiron/src/run.py
          command:
            - /bin/bash
            - -c
          image: <image>
          imagePullPolicy: Always
          env:
            - name: RABBIT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: chiron-rabbit
            - name: RABBIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: chiron-rabbit
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/home/chiron/chiron-xomad.json"
            - name: KUBECONFIG
              value: "/home/chiron/kubeconfig.yaml"
          volumeMounts:
            - mountPath: /home/chiron/config/config.yml
              name: chiron-config
              subPath: config.yml
            - mountPath: /home/chiron/chiron-xomad.json
              name: chiron-service-account
              subPath: chiron-xomad.json
      restartPolicy: Always
      volumes:
        - name: chiron-config
          configMap:
            name: chiron-config
        - name: chiron-service-account
          configMap:
            name: chiron-service-account
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chiron-config
  namespace: chiron
data:
  "config.yml": |-
    server:
      hosts:
        - <rabbit-host-1>
        - <rabbit-host-2>
        - <rabbit-host-3>
      username: ${RABBIT_USERNAME}
      password: ${RABBIT_PASSWORD}
    scaler:
      # deployment_name:
      #   minPod: default = 0 if not set
      #   maxPod:
      #   vHost:
      #   interval: time between 2 scraping or time of init worker
      #   accumulative_limit: number of pods of every scale default = 1 if not set
      #   queues: list of queues
      #   ttl: time of processing message default is 1.0 (m) if not set

      deployment-1:
        minPod: 0
        maxPod: 10
        vHost: test
        interval: 120
        accumulative_limit: 2
        ttl: 3.0
        queues:
          - queue1
          - queue2
          - queue3
